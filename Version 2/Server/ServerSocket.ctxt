#BlueJ class context
comment0.params=sellp\ feedp
comment0.target=ServerSocket(double,\ double)
comment0.text=\n\ Constructor\n\ sets\ up\ the\ socket\ with\ a\ series\ of\ simulated\ commands.\n\ \n\ Note\ that,\ by\ default,\ it\ sets\ the\ price\ to\ have\ a\ sell\ amount\ of\ 10,\ and\ production\n\ amount\ of\ 100.\ \n
comment1.params=
comment1.target=ServerSocket()
comment1.text=\n\ Constructor\ -\ Default\ values\n
comment10.params=p
comment10.target=void\ setPrice(SmartMeter.Price)
comment10.text=\n\ setPrice\n\ Allows\ the\ setting\ of\ a\ specific\ price\ for\ the\ purposes\ of\ testing\n
comment11.params=s
comment11.target=void\ setStack(java.util.Stack)
comment11.text=\n\ setStack\n\ allows\ the\ setting\ of\ the\ command\ stack\ for\ testing\ purposes.\ \n
comment12.params=c
comment12.target=void\ addCommand(SmartMeter.Command)
comment12.text=\n\ addCommand\n\ Adds\ a\ command\ to\ the\ command\ stack.\ Added\ for\ the\ purposes\ of\ testing.\ \n
comment2.params=s\ d
comment2.target=void\ testCommand(java.lang.String,\ java.util.Date)
comment2.text=\n\ testCommands\n\ Loads\ a\ sequence\ of\ test\ commands\ into\ the\ command\ issue\ stack\n
comment3.params=
comment3.target=void\ testSignature()
comment3.text=\n\ testSignature\n\ Loads\ a\ sequence\ of\ invalid\ test\ commands\ into\ the\ command\ issue\ stack\n\ The\ commands\ only\ are\ invalid\ insofar\ as\ the\ signature\ is\ incorrect\n
comment4.params=d
comment4.target=void\ testDateValidity(java.util.Date)
comment4.text=\n\ testDateValidity\n\ Loads\ a\ sequence\ of\ commands\ into\ the\ command\ stack\ with\ valid\ signatures,\ but\ with\ \n\ invalid\ dates.\ Typical\ of\ a\ replay\ attack.\n
comment5.params=
comment5.target=void\ validCommands()
comment5.text=\n\ validCommands\n\ Loads\ a\ sequence\ of\ valid\ commands\ into\ the\ command\ stack.\n
comment6.params=
comment6.target=SmartMeter.Command\ issueCommands()
comment6.text=\n\ issueCommands\n\ A\ method\ which\ simulates\ a\ set\ of\ server\ commands\ being\ issued.\ For\ simplicity's\ sake\n\ we'll\ assume\ they\ are\ issued\ in\ date\ order.\ \n
comment7.params=
comment7.target=SmartMeter.Price\ sendPrice()
comment7.text=\n\ sendPrice\n\ A\ method\ which\ packs\ up\ all\ price\ information\ nicely\ and\ returns\ it.\ \n
comment8.params=data
comment8.target=void\ receiveData(java.lang.String)
comment8.text=\n\ receiveData\n\ A\ simulation\ of\ commands\ being\ received\ by\ the\ smart-meter\ for\ the\ purpose\ of\ testing\ \n\ the\ sending\ of\ sensitive\ data.\n\ \n\ For\ ease\ of\ use,\ only\ strings\ will\ be\ used\ here.\ \n
comment9.params=
comment9.target=java.lang.String\ examineReceived()
comment9.text=\n\ examineReceived\n\ \n\ A\ method\ which\ will\ output\ the\ received\ data\n
numComments=13
