#BlueJ class context
comment0.params=
comment0.target=ExternalTests()
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=e\ verbose
comment10.target=void\ examineSM(SmartMeter.Engine,\ boolean)
comment10.text=\n\ examineSM\n\ Displays\ internal\ information\ of\ the\ smartmeter\ through\ the\ debug\ interface\n\ @param\ verbose\ determines\ whether\ to\ show\ additional\ information\n
comment11.params=e
comment11.target=void\ examineSM(SmartMeter.Engine)
comment12.params=server
comment12.target=void\ examineServer(Server.ServerSocket)
comment12.text=\n\ examineServer\n\ Takes\ a\ 'Server'\ set\ of\ output\ and\ displays\ it\ on\ screen.\ \n\n
comment2.params=verbose
comment2.target=boolean\ functionalityTest(boolean)
comment2.text=\n\ functionaility\ test\n\ Should\ create\ a\ server\ undergo\ a\ set\ of\ normal\ tests\n
comment3.params=verbose
comment3.target=boolean\ commandSignatureTest(boolean)
comment3.text=\n\ commandSignatureTest\n\ The\ purpose\ of\ the\ the\ test\ is\ to\ determine\ if\ the\ Smart\ meter\ will\ correctly\n\ handle\ being\ given\ a\ number\ of\ commands\ with\ invalid\ signatures.\ \n\ \n\ Expected\ output\:\ Failure\ to\ execute\ all\ commands.\ \n\ \n\ All\ data\ should\ remain\ as\ initially\ declared,\ at\ default\ values.\ \n
comment4.params=verbose
comment4.target=boolean\ test_replayAttacks(boolean)
comment4.text=\n\ replayAttackTest\n\ \n\ Provides\ a\ set\ of\ commands\ to\ the\ smartmeter\ which\ are\ signed\ correctly,\n\ but\ have\ invalid\ dates.\ This\ is\ a\ typical\ scenario\ when\ \n\ a\ hostile\ actor\ has\ captured\ valid\ commands\ and\ resends\ them\ to\ the\ \n\ application\ later.\ \n\ \n\ Oracle\:\ Should\ be\ no\ change\ in\ system\ variables\ as\ the\ (simulated)\ date\ stamp\n\ should\ fail\ to\ authenticate\ on\ the\ second\ set\ of\ commands.\ \n
comment5.params=verbose
comment5.target=boolean\ test_dataRetention(boolean)
comment5.text=\n\ test_dataRetention\n\ A\ test\ determined\ to\ see\ if\ the\ smart\ meter\ will\ handle\ loss\ of\ power\n\ or\ hard-reboot\ without\ dataloss\n\ \n\ Oracle\:\ Smart\ Meter\ shows\ valid\ usage\ data\ after\ being\ recreated.\n
comment6.params=verbose
comment6.target=boolean\ test_priceSignature(boolean)
comment6.text=\n\ test_priceSignature\n\ A\ test\ to\ determine\ the\ correctness\ of\ the\ price\ signature/key\ handling\n\ mechanism.\n\ \n\ Oracle\:\ No\ commands\ should\ be\ processed\ from\ the\ hostile\ server.\ No\ \n\ Price\ changes\ should\ be\ effected\ to\ the\ SmartMeter.\ Price\ should\ remain\ at\ 10,\ 100\n
comment7.params=verbose
comment7.target=boolean\ test_priceDateCheck(boolean)
comment7.text=\n\ test_priceDateCheck\n\ Tests\ the\ date\ checking\ feature\ of\ the\ price\ update\ process.\ Designed\n\ to\ simulate\ a\ replay\ attack,\ where\ the\ date\ packet\ has\ been\ captured\n\ and\ replayed\ at\ a\ later\ date.\ \n\ \n\ Oracle\:\ Date\ should\ not\ be\ affected\ from\ the\ original.\ Price\ should\n\ remain\ at\ 10,\ 100.\ \n
comment8.params=
comment8.target=void\ testSendEnc()
comment8.text=\n\ testSendEnc\n\ \n\ A\ method\ which\ observes\ all\ data\ received\ by\ the\ server\ to\ demonstrate\ if\ it\ has\ been\ \n\ through\ the\ appropriate\ encryption\ simulation\ methods\ in\ the\ \n\ Smart\ meter.\ \n\ \n\ Oracle\:\ All\ data\ should\ indicate\ that\ encryption\ 'has'\ (in\ a\ simulated\ sense)\ occured.\ \n
comment9.params=
comment9.target=void\ Test3_PrivateMethodsAndVariables()
comment9.text=\n\ AccessTest\n\ Testing\ access\ to\ private\ methods\ and\ variables\n\ \n\ Oracle\:\ No\ methods\ or\ variables\ should\ be\ allowed\ at\ compile-time.\ \n
numComments=13
