#BlueJ class context
comment0.params=sellp\ feedp
comment0.target=ServerSocket(double,\ double)
comment0.text=\n\ Constructor\n\ sets\ up\ the\ socket\ with\ a\ series\ of\ simulated\ commands\n
comment1.params=
comment1.target=ServerSocket()
comment1.text=\n\ Constructor\ -\ Default\ values\n
comment10.params=o
comment10.target=void\ receiveData(java.lang.Object)
comment10.text=\n\ receiveData\n\ A\ simulation\ of\ commands\ being\ received\ by\ the\ smart-meter\ for\ the\ purpose\ of\ testing\ \n\ the\ sending\ of\ sensitive\ data.\n
comment2.params=s\ d
comment2.target=void\ testCommand(java.lang.String,\ boolean)
comment2.text=\n\ testCommands\n\ Loads\ a\ sequence\ of\ test\ commands\ into\ the\ command\ issue\ stack\n
comment3.params=
comment3.target=void\ testSignature()
comment3.text=\n\ testSignature\n\ Loads\ a\ sequence\ of\ invalid\ test\ commands\ into\ the\ command\ issue\ stack\n\ The\ commands\ only\ are\ invalid\ insofar\ as\ the\ signature\ is\ incorrect\n
comment4.params=
comment4.target=void\ testDateValidity()
comment4.text=\n\ testDateValidity\n\ Loads\ a\ sequence\ of\ commands\ into\ the\ command\ stack\ with\ valid\ signatures,\ but\ with\ \n\ invalid\ dates.\ Typical\ of\ a\ replay\ attack.\n
comment5.params=
comment5.target=void\ validCommands()
comment5.text=\n\ validCommands\n\ Loads\ a\ sequence\ of\ valid\ commands\ into\ the\ command\ stack.\n
comment6.params=
comment6.target=Command\ issueCommands()
comment6.text=\n\ issueCommands\n\ A\ method\ which\ simulates\ a\ set\ of\ server\ commands\ being\ issued.\ For\ simplicity's\ sake\n\ we'll\ assume\ they\ are\ issued\ in\ date\ order.\ \n
comment7.params=
comment7.target=double\ issuePrice()
comment7.text=\n\ issuePrice\n\ A\ method\ which\ simulates\ the\ prices\ at\ a\ given\ time.\ \n\ For\ the\ purposes\ of\ testing,\ this\ will\ always\ be\ 10.\n
comment8.params=
comment8.target=double\ issueFeedinPrice()
comment8.text=\n\ issueFeedinPrice\n\ A\ method\ which\ simulates\ the\ feed-in\ price.\ For\ the\ purposes\n\ of\ testing\ this\ will\ always\ be\ 100.\n
comment9.params=
comment9.target=Price\ sendPrice()
comment9.text=\n\ sendPrice\n\ A\ method\ which\ packs\ up\ all\ price\ information\ nicely\ and\ returns\ it.\ \n
numComments=11
